{
 "Resources": {
  "stackgenerateddefaultbucket0D3205AE": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "imgproxystack-bucket",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/stack-generated-default-bucket/Resource"
   }
  },
  "stackgenerateddefaultbucketPolicyCB40CDBE": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "stackgenerateddefaultbucket0D3205AE"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "stackgenerateddefaultbucket0D3205AE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "stackgenerateddefaultbucket0D3205AE",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/stack-generated-default-bucket/Policy/Resource"
   }
  },
  "imgproxylamdarole82646660": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXrayWriteOnlyAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy-lamda-role/Resource"
   }
  },
  "readwritebucketpolicyDCD4CB5F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudwatch:PutMetricData",
        "cloudwatch:PutMetricStream"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatch"
      },
      {
       "Action": "ssm:GetParametersByPath",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/imgproxy/dev"
         ]
        ]
       },
       "Sid": "SystemsManagerAccess"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:GetObjectVersion"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "stackgenerateddefaultbucket0D3205AE",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       },
       "Sid": "S3Access"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "readwritebucketpolicyDCD4CB5F",
    "Roles": [
     {
      "Ref": "imgproxylamdarole82646660"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/read-write-bucket-policy/Resource"
   }
  },
  "imgproxyServiceRole01C2399E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/ServiceRole/Resource"
   }
  },
  "imgproxyServiceRoleDefaultPolicyBB9560AF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "imgproxyServiceRoleDefaultPolicyBB9560AF",
    "Roles": [
     {
      "Ref": "imgproxyServiceRole01C2399E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "imgproxy40EEB6C5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Join": [
       "",
       [
        "825765411384.dkr.ecr.us-east-1.",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/imgproxy:latest"
       ]
      ]
     }
    },
    "Environment": {
     "Variables": {
      "PORT": "8080",
      "IMGPROXY_LOG_FORMAT": "json",
      "IMGPROXY_ENV_AWS_SSM_PARAMETERS_PATH": "/imgproxy/dev",
      "IMGPROXY_CLOUD_WATCH_SERVICE_NAME": "ImgproxyStack",
      "IMGPROXY_CLOUD_WATCH_NAMESPACE": "imgproxy",
      "IMGPROXY_CLOUD_WATCH_REGION": {
       "Ref": "AWS::Region"
      },
      "IMGPROXY_USE_S3": "1"
     }
    },
    "FunctionName": "ImgproxyStack",
    "LoggingConfig": {
     "LogFormat": "JSON"
    },
    "MemorySize": 2048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "imgproxyServiceRole01C2399E",
      "Arn"
     ]
    },
    "Timeout": 60,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "imgproxyServiceRoleDefaultPolicyBB9560AF",
    "imgproxyServiceRole01C2399E"
   ],
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/Resource"
   }
  },
  "imgproxyLogRetention1D5C5506": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "imgproxy40EEB6C5"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/LogRetention/Resource"
   }
  },
  "imgproxyFunctionUrlB6DEF4E7": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "AWS_IAM",
    "InvokeMode": "RESPONSE_STREAM",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "imgproxy40EEB6C5",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/FunctionUrl/Resource"
   }
  },
  "imgproxyAllowCloudFrontServicePrincipalC3C62D27": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "imgproxy40EEB6C5",
      "Arn"
     ]
    },
    "Principal": "cloudfront.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cloudfront::",
       {
        "Ref": "AWS::AccountId"
       },
       ":distribution/",
       {
        "Ref": "imageDeliveryDistribution8CA0B45D"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imgproxy/AllowCloudFrontServicePrincipal"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs20.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "urlRewriteD6DE1501": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "const crypto=require(\"crypto\");const cf=require(\"cloudfront\");const imgproxyKey=\"dev.key\";const imgproxySalt=\"dev.salt\";const imgproxyArgumentsSeparotor=\"dev.arguments_separator\";const indexedOptions={resize:{full:\"resize\",short:\"rs\",meta:true,metaOptions:[\"resizing_type\",\"width\",\"height\",\"enlarge\",\"extend\"]},rs:{full:\"resize\",short:\"rs\",meta:true,metaOptions:[\"resizing_type\",\"width\",\"height\",\"enlarge\",\"extend\"]},size:{full:\"size\",short:\"s\",meta:true,metaOptions:[\"width\",\"height\",\"enlarge\",\"extend\"]},s:{full:\"size\",short:\"s\",meta:true,metaOptions:[\"width\",\"height\",\"enlarge\",\"extend\"]},resizing_type:{full:\"resizing_type\",short:\"rt\"},rt:{full:\"resizing_type\",short:\"rt\"},width:{full:\"width\",short:\"w\"},w:{full:\"width\",short:\"w\"},height:{full:\"height\",short:\"h\"},h:{full:\"height\",short:\"h\"},min_width:{full:\"min_width\",short:\"mw\"},mw:{full:\"min_width\",short:\"mw\"},min_height:{full:\"min_height\",short:\"mh\"},mh:{full:\"min_height\",short:\"mh\"},zoom:{full:\"zoom\",short:\"z\"},z:{full:\"zoom\",short:\"z\"},dpr:{full:\"dpr\",short:\"dpr\"},enlarge:{full:\"enlarge\",short:\"el\"},el:{full:\"enlarge\",short:\"el\"},extend:{full:\"extend\",short:\"ex\"},ex:{full:\"extend\",short:\"ex\"},extend_aspect_ratio:{full:\"extend_aspect_ratio\",short:\"exar\",alt:\"extend_ar\"},exar:{full:\"extend_aspect_ratio\",short:\"exar\",alt:\"extend_ar\"},extend_ar:{full:\"extend_aspect_ratio\",short:\"exar\",alt:\"extend_ar\"},gravity:{full:\"gravity\",short:\"g\"},g:{full:\"gravity\",short:\"g\"},crop:{full:\"crop\",short:\"c\"},c:{full:\"crop\",short:\"c\"},trim:{full:\"trim\",short:\"t\"},t:{full:\"trim\",short:\"t\"},padding:{full:\"padding\",short:\"pd\"},pd:{full:\"padding\",short:\"pd\"},auto_rotate:{full:\"auto_rotate\",short:\"ar\"},ar:{full:\"auto_rotate\",short:\"ar\"},rotate:{full:\"rotate\",short:\"rot\"},rot:{full:\"rotate\",short:\"rot\"},background:{full:\"background\",short:\"bg\"},bg:{full:\"background\",short:\"bg\"},blur:{full:\"blur\",short:\"bl\"},bl:{full:\"blur\",short:\"bl\"},sharpen:{full:\"sharpen\",short:\"sh\"},sh:{full:\"sharpen\",short:\"sh\"},pixelate:{full:\"pixelate\",short:\"pix\"},pix:{full:\"pixelate\",short:\"pix\"},watermark:{full:\"watermark\",short:\"wm\"},wm:{full:\"watermark\",short:\"wm\"},strip_metadata:{full:\"strip_metadata\",short:\"sm\"},sm:{full:\"strip_metadata\",short:\"sm\"},keep_copyright:{full:\"keep_copyright\",short:\"kcr\"},kcr:{full:\"keep_copyright\",short:\"kcr\"},strip_color_profile:{full:\"strip_color_profile\",short:\"scp\"},scp:{full:\"strip_color_profile\",short:\"scp\"},enforce_thumbnail:{full:\"enforce_thumbnail\",short:\"eth\"},eth:{full:\"enforce_thumbnail\",short:\"eth\"},quality:{full:\"quality\",short:\"q\"},q:{full:\"quality\",short:\"q\"},format_quality:{full:\"format_quality\",short:\"fq\"},fq:{full:\"format_quality\",short:\"fq\"},max_bytes:{full:\"max_bytes\",short:\"mb\"},mb:{full:\"max_bytes\",short:\"mb\"},format:{full:\"format\",short:\"f\",alt:\"ext\"},f:{full:\"format\",short:\"f\",alt:\"ext\"},ext:{full:\"format\",short:\"f\",alt:\"ext\"},skip_processing:{full:\"skip_processing\",short:\"skp\"},skp:{full:\"skip_processing\",short:\"skp\"},raw:{full:\"raw\",short:\"raw\"},cache_buster:{full:\"cache_buster\",short:\"cb\"},cb:{full:\"cache_buster\",short:\"cb\"},expires:{full:\"expires\",short:\"exp\"},exp:{full:\"expires\",short:\"exp\"},filename:{full:\"filename\",short:\"fn\"},fn:{full:\"filename\",short:\"fn\"},return_attachment:{full:\"return_attachment\",short:\"att\"},att:{full:\"return_attachment\",short:\"att\"},preset:{full:\"preset\",short:\"pr\"},pr:{full:\"preset\",short:\"pr\"},max_src_resolution:{full:\"max_src_resolution\",short:\"msr\"},msr:{full:\"max_src_resolution\",short:\"msr\"},max_src_file_size:{full:\"max_src_file_size\",short:\"msfs\"},msfs:{full:\"max_src_file_size\",short:\"msfs\"},max_animation_frames:{full:\"max_animation_frames\",short:\"maf\"},maf:{full:\"max_animation_frames\",short:\"maf\"},max_animation_frame_resolution:{full:\"max_animation_frame_resolution\",short:\"mafr\"},mafr:{full:\"max_animation_frame_resolution\",short:\"mafr\"}};function validate_signature(t,r,e,o){if(!_verify(t,r,e,o)){throw new Error(\"Signature verification failed\")}}function _verify(t,r,e,o){return _stringTimingSafeEqual(o,_sign(t,r,e))}function _stringTimingSafeEqual(t,r){if(t.length!==r.length){return false}const e=Buffer.from(t,\"utf8\");const o=Buffer.from(r,\"utf8\");let s=0;for(let t=0;t<e.length;t++){s|=e[t]^o[t]}return 0===s}function _sign(t,r,e){const o=crypto.createHmac(\"sha256\",_hexDecode(e));o.update(_hexDecode(t));o.update(r);return o.digest(\"base64url\")}function _hexDecode(t){return Buffer.from(t,\"hex\")}function _trimSeparators(t){return t.replaceAll(/^\\/|\\/$/g,\"\")}async function handler(t){const r=t.request;const e=await getEnvironmentVariables();if(e.none!==undefined){return sendError(403,\"Forbidden\",\"\",e.none)}const o=e.some.IMGPROXY_SALT;const s=e.some.IMGPROXY_KEY;const l=e.some.IMGPROXY_ARGUMENTS_SEPARATOR;const n=new RegExp(`^\\\\/([^\\\\/]+)\\\\/((?:[a-z]+\\\\${l}[^\\\\/]+\\\\/)+)?(plain\\\\/|enc\\\\/)?(.+)`,\"g\");const i=n.exec(r.uri);if(i===null){return sendError(403,\"Forbidden\",\"\",new Error(\"Unable to parse URI\"))}if(i[1]===undefined){return sendError(403,\"Forbidden\",\"\",new Error(\"Signature is missing from URI\"))}const a=i[1];const f=i[2]!==undefined?i[2]:\"\";const u=i[3]!==undefined?i[3]:\"\";const h=i[4]!==undefined?i[4]:\"\";try{validate_signature(o,`/${f}${u}${h}`,s,a)}catch(t){return sendError(403,\"Forbidden\",\"\",new Error(\"Signature verification failed\",{cause:t}))}const c=Object.create(null);const m=_trimSeparators(f).split(\"/\");for(let t=0;t<m.length;t++){const r=m[t];const e=r.split(l);const o=e.shift();const s=e;if(o!==undefined&&s.length>0){const t=indexedOptions[o];if(t!==undefined){if(t.meta!==undefined){const r=t.metaOptions;for(let t=0;t<r.length;t++){const e=r[t];if(s[t]!==undefined){const o=t===r.length-1?s.slice(t):[s[t]];const n=indexedOptions[e];if(n!==undefined){const t=n.short!==undefined?n.short:e;delete c[t];c[t]=o.join(l)}}}}else{const r=t.short!==undefined?t.short:o;delete c[r];c[r]=s.join(l)}}}}const _=[];const d=Object.entries(c);for(let t=0;t<d.length;t++){const r=d[t];_.push(r.join(l))}const p=_.join(\"/\");const g=`/${p}/${u}${h}`;const x=`/${_sign(o,g,s)}${g}`;r.uri=x;return r}async function getEnvironmentVariables(){const t=cf.kvs();try{const r=await t.get(imgproxySalt,{format:\"string\"});const e=await t.get(imgproxyKey,{format:\"string\"});const o=await t.get(imgproxyArgumentsSeparotor,{format:\"string\"});return{some:{IMGPROXY_SALT:r,IMGPROXY_KEY:e,IMGPROXY_ARGUMENTS_SEPARATOR:o}}}catch(t){return{none:new Error(\"Failed to retrieve value from key value store\",{cause:t})}}}function sendError(t,r,e,o){logError(e,o);return{statusCode:t,statusText:r,body:e}}function logError(t,r){console.log(\"APPLICATION ERROR\",t);console.log(r)}export{};\n",
    "FunctionConfig": {
     "Comment": "urlRewriteFunctionc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea",
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": "urlRewriteFunctionc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea"
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/urlRewrite/Resource"
   }
  },
  "ImageCachePolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1eaC8B08AFC": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "DefaultTTL": 31536000,
     "MaxTTL": 31536000,
     "MinTTL": 0,
     "Name": {
      "Fn::Join": [
       "",
       [
        "ImgproxyStackImageCachePolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1eaC55EBFCC-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "whitelist",
       "Headers": [
        "Accept"
       ]
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/ImageCachePolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea/Resource"
   }
  },
  "ResponseHeadersPolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea8C4478B8": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "CorsConfig": {
      "AccessControlAllowCredentials": false,
      "AccessControlAllowHeaders": {
       "Items": [
        "*"
       ]
      },
      "AccessControlAllowMethods": {
       "Items": [
        "GET"
       ]
      },
      "AccessControlAllowOrigins": {
       "Items": [
        "*"
       ]
      },
      "AccessControlMaxAgeSec": 600,
      "OriginOverride": false
     },
     "CustomHeadersConfig": {
      "Items": [
       {
        "Header": "x-aws-imgproxy",
        "Override": true,
        "Value": "v1.0"
       },
       {
        "Header": "vary",
        "Override": true,
        "Value": "accept"
       }
      ]
     },
     "Name": "ImageResponsePolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/ResponseHeadersPolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea/Resource"
   }
  },
  "imageDeliveryDistribution8CA0B45D": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Comment": "imgproxy - image delivery",
     "DefaultCacheBehavior": {
      "CachePolicyId": {
       "Ref": "ImageCachePolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1eaC8B08AFC"
      },
      "Compress": false,
      "FunctionAssociations": [
       {
        "EventType": "viewer-request",
        "FunctionARN": {
         "Fn::GetAtt": [
          "urlRewriteD6DE1501",
          "FunctionARN"
         ]
        }
       }
      ],
      "ResponseHeadersPolicyId": {
       "Ref": "ResponseHeadersPolicyc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea8C4478B8"
      },
      "TargetOriginId": "ImgproxyStackimageDeliveryDistributionOrigin1FC1433F0",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         0,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "//",
               {
                "Fn::GetAtt": [
                 "imgproxyFunctionUrlB6DEF4E7",
                 "FunctionUrl"
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       },
       "Id": "ImgproxyStackimageDeliveryDistributionOrigin1FC1433F0",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "OAC",
         "Id"
        ]
       },
       "OriginShield": {
        "Enabled": true,
        "OriginShieldRegion": "us-east-1"
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/imageDeliveryDistribution/Resource"
   }
  },
  "OAC": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Name": "oacc8daa9c9b40e4ae4f79684d979f190abc66c56b1ea",
     "OriginAccessControlOriginType": "lambda",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/OAC"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VPy27CQAz8Fu6Lq8ChvQJVxaFSUVDPaNmY1GSzRmtvEYry71UeNFXVnmbGntHYC8genyCb2avMXVHNPR2h2at1lbFXOTSyhGadXIVqNqcwsgF27MndpvGoB7G2gq0hW0OTs8fO1eMUGlhr0EXI8cJCyvHW5Yy39bGw0Lyk4JQ4dPZvfifv0XfzEXYYaxIhDq3xXAq8cpmjYugzsjxYEVSBVQfGeU7FKXLQf0o21n3gdOtPmaNcOAhu0RYYZTL9vXgm0UjHdK/4rd8ilRRWzqHIhoNG9m3bL5JeknZ1nKLDsWHg/Rd7tSWFsjWBC4SzPHwuFpAtIZudhWgeU1CqEfIBvwDMDj+66QEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ImgproxyStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "OriginalImagesS3Bucket": {
   "Description": "S3 default bucket",
   "Value": {
    "Ref": "stackgenerateddefaultbucket0D3205AE"
   }
  },
  "ImageDeliveryDomain": {
   "Description": "Domain name of image delivery",
   "Value": {
    "Fn::GetAtt": [
     "imageDeliveryDistribution8CA0B45D",
     "DomainName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}