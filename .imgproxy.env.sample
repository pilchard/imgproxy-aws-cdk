## URL signature
#   see: https://docs.imgproxy.net/configuration/options#url-signature
#
#   hex-encoded key
IMGPROXY_KEY=SuperSecretKey
#   hex-encoded salt
IMGPROXY_SALT=Lawry_s
#   number of bytes to use for signature before encoding to Base64. default: 32
# IMGPROXY_SIGNATURE_SIZE=32
#   A list of trusted signatures, comma divided. When set, imgproxy will trust the signatures from the list and won't check them even if IMGPROXY_KEY and IMGPROXY_SALT are set. Default: blank
# IMGPROXY_TRUSTED_SIGNATURES=

## Server
#
#   The address and port or Unix socket to listen to. Default: :8080
# [LAMBDA ENV - PORT] IMGPROXY_BIND=:8080
#   The network to use. Known networks are tcp, tcp4, tcp6, unix, and unixpacket. Default: tcp
# IMGPROXY_NETWORK=tcp
#   The maximum duration (in seconds) for processing the response. (deprecated alias: IMGPROXY_WRITE_TIMEOUT) Default: 10
# IMGPROXY_TIMEOUT=10
#   the maximum duration (in seconds) for reading the entire incoming HTTP request, including the body. (deprecated alias: IMGPROXY_READ_TIMEOUT) Default: 10
# IMGPROXY_READ_REQUEST_TIMEOUT=10
#   the maximum duration (in seconds) for writing the HTTP response body. Default: 10
# IMGPROXY_WRITE_RESPONSE_TIMEOUT=10
#   the maximum duration (in seconds) to wait for the next request before closing the connection. When set to 0, keep-alive is disabled. Default: 10
# IMGPROXY_KEEP_ALIVE_TIMEOUT=10
#   the maximum duration (in seconds) to wait for the next request before closing the HTTP client connection. The HTTP client is used to download source images. When set to 0, keep-alive is disabled. Default: 90
# IMGPROXY_CLIENT_KEEP_ALIVE_TIMEOUT=90
#   the maximum duration (in seconds) for downloading the source image. Default: 5
# IMGPROXY_DOWNLOAD_TIMEOUT=5
#   the maximum number of images an imgproxy instance can process simultaneously without creating a queue. Default: the number of CPU cores multiplied by two (alias: IMGPROXY_CONCURRENCY)
# [AWS DEFAULT - 1]IMGPROXY_WORKERS=1
#   the maximum number of image requests that can be put in the queue. Requests that exceed this limit are rejected with 429 HTTP status. When set to 0, the requests queue is unlimited. Default: 0
# IMGPROXY_REQUESTS_QUEUE_SIZE=0
#   the maximum number of simultaneous active connections. When set to 0, connection limit is disabled. Default: 2048
# IMGPROXY_MAX_CLIENTS=2048
#   a duration (in seconds) sent via the Cache-Control: max-age HTTP header. Default: 31536000 (1 year)
# IMGPROXY_TTL=31536000
#   when true and the source image response contains the Expires or Cache-Control headers, reuse those headers. Default: false
# IMGPROXY_CACHE_CONTROL_PASSTHROUGH=false
#   when true and the source image has an http or https scheme, set a rel="canonical" HTTP header to the value of the source image URL. More details here. Default: false
# IMGPROXY_SET_CANONICAL_HEADER=false
#   when true, enables SO_REUSEPORT socket option (currently only available on Linux and macOS);
# IMGPROXY_SO_REUSEPORT=false
#   the URL path prefix. Example: when set to /abc/def, the imgproxy URL will be /abc/def/%signature/%processing_options/%source_url. Default: blank
# IMGPROXY_PATH_PREFIX=
#   the User-Agent header that will be sent with the source image request. Default: imgproxy/%current_version
# IMGPROXY_USER_AGENT=imgproxy/%current_version
#   when set to true, enables using the ETag HTTP header for HTTP cache control. Default: false
# IMGPROXY_USE_ETAG=false
#   change this to change ETags for all the images. Default: blank
# IMGPROXY_ETAG_BUSTER=
#   when set to true, enables using the Last-Modified HTTP header for HTTP cache control. Default: false
# IMGPROXY_USE_LAST_MODIFIED=false
#   when set to true, imgproxy will add debug headers to the response. Default: false. The following headers will be added:
#       X-Origin-Content-Length: the size of the source image
#       X-Origin-Width: the width of the source image
#       X-Origin-Height: the height of the source image
#       X-Result-Width: the width of the resultant image
#       X-Result-Height: the height of the resultant image
# IMGPROXY_ENABLE_DEBUG_HEADERS=false

## Security
#
#   when true, allows usage of security-related processing options such as max_src_resolution, max_src_file_size, max_animation_frames, and max_animation_frame_resolution. Default: false.
# IMGPROXY_ALLOW_SECURITY_OPTIONS=true
#   the maximum resolution of the source image, in megapixels. Images with larger actual size will be rejected. Default: 50
# IMGPROXY_MAX_SRC_RESOLUTION=50
#   the maximum size of the source image, in bytes. Images with larger file size will be rejected. When set to 0, file size check is disabled. Default: 0
IMGPROXY_MAX_SRC_FILE_SIZE=
#   the maximum number of animated image frames that may be processed. Default: 1
# IMGPROXY_MAX_ANIMATION_FRAMES=1
#   the maximum resolution of the animated source image frame, in megapixels. Images with larger actual frame size will be rejected. When set to 0, imgproxy will test the whole animated image resolution against IMGPROXY_MAX_SRC_RESOLUTION summarising all the frames' resolutions. Default: 0
# IMGPROXY_MAX_ANIMATION_FRAME_RESOLUTION=0
#   the maximum number of bytes imgproxy will read to recognize SVG files. If imgproxy is unable to recognize your SVG, try increasing this number. Default: 32768 (32KB)
# IMGPROXY_MAX_SVG_CHECK_BYTES=32768
#   the max number of redirects imgproxy can follow while requesting the source image. When set to 0, no redirects are allowed. Default: 10
# IMGPROXY_MAX_REDIRECTS=10
#   the authorization token. If specified, the HTTP request should contain the Authorization: Bearer %secret% header.
# IMGPROXY_SECRET=
#   hex-encoded key used for source URL encryption. Default: blank
# IMGPROXY_SOURCE_URL_ENCRYPTION_KEY=
#   when specified, enables CORS headers with the provided origin. CORS headers are disabled by default.
# IMGPROXY_ALLOW_ORIGIN=false
#   a whitelist of source image URL prefixes divided by comma. Wildcards can be included with `*` to match all characters except `/`. When blank, imgproxy allows all source image URLs. Must end in a trailing `\`. Example: `s3://,https://*.example.com/,local://` Default: blank
IMGPROXY_ALLOWED_SOURCES=s3://
#   when true, allows connecting to loopback IP addresses (127.0.0.1-127.255.255.255 and IPv6 analogues) when requesting source images. Default: false
# IMGPROXY_ALLOW_LOOPBACK_SOURCE_ADDRESSES=false
#   when true, allows connecting to link-local multicast and unicast IP addresses (224.0.0.1-224.0.0.255, 169.254.0.1-169.254.255.255, and IPv6 analogues) when requesting source images. Default: false
# IMGPROXY_ALLOW_LINK_LOCAL_SOURCE_ADDRESSES=false
#   when true, allows connecting to private IP addresses (10.0.0.0 - 10.255.255.255, 172.16.0.0 - 172.31.255.255, 192.168.0.0 - 192.168.255.255, and IPv6 analogues) when requesting source images. Default: true
# IMGPROXY_ALLOW_PRIVATE_SOURCE_ADDRESSES=true
#   when true, disables the limit on the number of PNG chunks. Default: false
# IMGPROXY_PNG_UNLIMITED=false
#   when true, disables the limit on the SVG file size (10MB). Default: false
# IMGPROXY_SVG_UNLIMITED=false
#   when true, imgproxy will remove scripts from SVG images to prevent XSS attacks. Defaut: true
# IMGPROXY_SANITIZE_SVG=true
#   when true, disables SSL verification, so imgproxy can be used in a development environment with self-signed SSL certificates.
# IMGPROXY_IGNORE_SSL_VERIFICATION=false
#   when true, imgproxy will respond with detailed error messages. Not recommended for production because some errors may contain stack traces.
# IMGPROXY_DEVELOPMENT_ERRORS_MODE=false

## Cookies
#
#   when true, incoming cookies will be passed through the image request if they are applicable for the image URL. Default: false
# IMGPROXY_COOKIE_PASSTHROUGH=false
#   when set, assume that cookies have the scope of this URL for an incoming request (instead of using request headers). If the cookies are applicable to the image URL too, they will be passed along in the image request.
# IMGPROXY_COOKIE_BASE_URL=

## Compression
#
#   the default quality of the resultant image, percentage. Default: 80
# IMGPROXY_QUALITY=80
#   default quality of the resulting image per format, separated by commas. Example: jpeg=70,avif=40,webp=60. When a value for the resulting format is not set, the IMGPROXY_QUALITY value is used. Default: webp=79,avif=63,jxl=77
# IMGPROXY_FORMAT_QUALITY="webp=79,avif=63,jxl=77"

## Advanced JPEG compression
#when true, enables progressive JPEG compression. Default: false
# IMGPROXY_JPEG_PROGRESSIVE=false

#   Advanced PNG compression
#   when true, enables interlaced PNG compression. Default: false
# IMGPROXY_PNG_INTERLACED=false
#   when true, enables PNG quantization. libvips should be built with Quantizr or libimagequant support. Default: false
# IMGPROXY_PNG_QUANTIZE=false
#   maximum number of quantization palette entries. Should be between 2 and 256. Default: 256
# IMGPROXY_PNG_QUANTIZATION_COLORS=256

#   Advanced AVIF compression
#   controls the CPU effort spent improving compression. The lowest speed is at 0 and the fastest is at 9. Default: 8
# IMGPROXY_AVIF_SPEED=8

#   Advanced JPEG XL compression
#   controls the CPU effort spent improving compression. The larger the value, the slower the encoding process but the better the compression. The value should be between 1 and 9. Default: 4
# IMGPROXY_JXL_EFFORT=4

#   SVG processing
#   when true, imgproxy will try to replace SVG features unsupported by librsvg to minimize SVG rendering error. This config only takes effect on SVG rasterization. Default: false
# IMGPROXY_SVG_FIX_UNSUPPORTED=false
#   when true, imgproxy will always rasterize SVG images unless SVG processing is not skipped. Default: false
# IMGPROXY_ALWAYS_RASTERIZE_SVG=false

#   AVIF/WebP/JPEG XL support detection
#   Enables WebP support detection. When the file extension is omitted in the imgproxy URL and browser supports WebP, imgproxy will use it as the resulting format.
IMGPROXY_AUTO_WEBP_DETECTION=true
#   enables WebP support detection and enforces WebP usage. If the browser supports WebP, it will be used as resulting format even if another extension is specified in the imgproxy URL.
# IMGPROXY_ENFORCE_WEBP=
#   Enables AVIF support detection. When the file extension is omitted in the imgproxy URL and browser supports AVIF, imgproxy will use it as the resulting format.
IMGPROXY_AUTO_AVIF_DETECTION=true
#   enables AVIF support detection and enforces AVIF usage. If the browser supports AVIF, it will be used as resulting format even if another extension is specified in the imgproxy URL.
# IMGPROXY_ENFORCE_AVIF=
#   enables JPEG XL support detection. When the file extension is omitted in the imgproxy URL and browser supports JPEG XL, imgproxy will use it as the resulting format.
# IMGPROXY_AUTO_JXL=
#   enables JPEG XL support detection and enforces JPEG XL usage. If the browser supports JPEG XL, it will be used as the resulting format even if another extension is specified in the imgproxy URL.
# IMGPROXY_ENFORCE_JXL=

#   Preferred formats
#   a list of preferred formats, comma divided. Default: jpeg,png,gif
# IMGPROXY_PREFERRED_FORMATS=jpeg,png,gif

#   Skip processing
#   a list of formats that imgproxy shouldn't process, comma divided.
# IMGPROXY_SKIP_PROCESSING_FORMATS=

#   Client Hints
#   enables Client Hints support to determine default width and DPR options. Read more details here about Client Hints.
# IMGPROXY_ENABLE_CLIENT_HINTS=

## Watermark
#
#   Base64-encoded image data. You can easily calculate it with base64 tmp/watermark.png | tr -d '\n'.
# IMGPROXY_WATERMARK_DATA=
#   the path to the locally stored image
# IMGPROXY_WATERMARK_PATH=
#   the watermark image URL
# IMGPROXY_WATERMARK_URL=

#   Fallback image
#
#   Base64-encoded image data. You can easily calculate it with base64 tmp/fallback.png | tr -d '\n'.
# IMGPROXY_FALLBACK_IMAGE_DATA=
#   the path to the locally stored image
# IMGPROXY_FALLBACK_IMAGE_PATH=
#   the fallback image URL
# IMGPROXY_FALLBACK_IMAGE_URL=
#   [PRO] when true, imgproxy will apply IMGPROXY_URL_REPLACEMENTS and IMGPROXY_BASE_URL to values of the fallback_image_url processing option.
# IMGPROXY_FALLBACK_IMAGE_PREPROCESS_URL=
#   the HTTP code for the fallback image response. When set to zero, imgproxy will respond with the usual HTTP code. Default: 200
# IMGPROXY_FALLBACK_IMAGE_HTTP_CODE=200
#   a duration (in seconds) sent via the Cache-Control: max-age HTTP header when a fallback image was used. When blank or 0, the value from IMGPROXY_TTL is used.
# IMGPROXY_FALLBACK_IMAGE_TTL=
#   [PRO] the size of custom fallback images cache. When set to 0, the fallback image cache is disabled. 256 fallback images are cached by default.
# IMGPROXY_FALLBACK_IMAGES_CACHE_SIZE=

#   Presets
#
#   a set of processing preset definitions, comma divided. Example: default=resizing_type:fill/enlarge:1,sharp=sharpen:0.7,blurry=blur:2. Default: blank
# IMGPROXY_PRESETS=
#   [PRO] a set of info preset definitions, comma divided. Example: default=xmp:0/blurhash:4:3. Default: blank
# IMGPROXY_INFO_PRESETS=
#   a string that will be used as a presets' separator. Default: ,
# IMGPROXY_PRESETS_SEPARATOR=,

#   Using only presets
#   when true, enables presets-only mode. Default: false
# IMGPROXY_ONLY_PRESETS=false
#   when true, enables presets-only mode for the info endpoint. Default: IMGPROXY_ONLY_PRESETS value
# IMGPROXY_INFO_ONLY_PRESETS=false

#   Local files
#   the root of the local filesystem. Keep this empty to disable local file serving.
# IMGPROXY_LOCAL_FILESYSTEM_ROOT=

## Amazon S3
#
#   when true, enables image fetching from Amazon S3 buckets. Default: false
# [LAMBDA ENV] IMGPROXY_USE_S3=false
#   an S3 buckets region
IMGPROXY_S3_REGION=us-east-1
#   a custom S3 endpoint to being used by imgproxy
# IMGPROXY_S3_ENDPOINT=
#   controls how the S3 bucket endpoint is constructed. When true, the endpoint will be constructed using the path style (https:#your-endpoint.com/%bucket). When false, the endpoint will be constructed using the virtual host style (https:#%bucket.your-endpoint.com). Default: true
# IMGPROXY_S3_ENDPOINT_USE_PATH_STYLE=true
#   when true, allows using S3 buckets from different regions. Default: false
# [LAMBDA ENV] IMGPROXY_S3_MULTI_REGION=false
#   when true, enables client-side decryption. Default: false
# [LAMBDA ENV] IMGPROXY_S3_USE_DECRYPTION_CLIENT=false
#   a custom role to assume
# [LAMBDA ENV] IMGPROXY_S3_ASSUME_ROLE_ARN=""
#   the external ID required to assume a custom role
# IMGPROXY_S3_ASSUME_ROLE_EXTERNAL_ID=

#   Google Cloud Storage
#
#   when true, enables image fetching from Google Cloud Storage buckets. Default: false
# IMGPROXY_USE_GCS=false
#   the Google Cloud JSON key. When set, enables image fetching from Google Cloud Storage buckets. Default: blank
# IMGPROXY_GCS_KEY=
#   a custom Google Cloud Storage endpoint to being used by imgproxy
# IMGPROXY_GCS_ENDPOINT=

#   Azure Blob Storage
#
#   when true, enables image fetching from Azure Blob Storage containers. Default: false
# IMGPROXY_USE_ABS=false
#   the Azure account name. Default: blank
# IMGPROXY_ABS_NAME=
#   the Azure account key. Default: blank
# IMGPROXY_ABS_KEY=
#   the custom Azure Blob Storage endpoint to be used by imgproxy. Default: blank
# IMGPROXY_ABS_ENDPOINT=

#   OpenStack Object Storage ("Swift")
#
#   when true, enables image fetching from OpenStack Swift Object Storage. Default: false
# IMGPROXY_USE_SWIFT=false
#   the username for Swift API access. Default: blank
# IMGPROXY_SWIFT_USERNAME=
#   the API key for Swift API access. Default: blank
# IMGPROXY_SWIFT_API_KEY=
#   the Swift Auth URL. Default: blank
# IMGPROXY_SWIFT_AUTH_URL=
#   the Swift auth version, set to 1, 2 or 3 or leave at 0 for autodetect.
# IMGPROXY_SWIFT_AUTH_VERSION=0
#   the tenant name (optional, v2 auth only). Default: blank
# IMGPROXY_SWIFT_TENANT=
#   the Swift domain name (optional, v3 auth only): Default: blank
# IMGPROXY_SWIFT_DOMAIN=
#   the data channel timeout in seconds. Default: 60
# IMGRPOXY_SWIFT_TIMEOUT_SECONDS=60
#   the connect channel timeout in seconds. Default: 10
# IMGRPOXY_SWIFT_CONNECT_TIMEOUT_SECONDS=10

#   Source image URLs
#
#   a base URL prefix that will be added to each source image URL. For example, if the base URL is http:#example.com/images and /path/to/image.png is requested, imgproxy will download the source image from http:#example.com/images/path/to/image.png. If the image URL already contains the prefix, it won't be added. Default: blank
# IMGPROXY_BASE_URL=
#   a list of pattern=replacement pairs, semicolon (;) divided. imgproxy will replace source URL prefixes matching the pattern with the corresponding replacement. Wildcards can be included in patterns with * to match all characters except /. ${N} in replacement strings will be replaced with wildcard values, where N is the number of the wildcard. Examples:
# IMGPROXY_URL_REPLACEMENTS=

#   Metrics
#
#   New Relic
#   the New Relic license key
# IMGPROXY_NEW_RELIC_KEY=
#   a New Relic application name. Default: imgproxy
# IMGPROXY_NEW_RELIC_APP_NAME=imgproxy
#   the list of New Relic labels, semicolon divided. Example=label1=value1label2=value2. Default: blank
# IMGPROXY_NEW_RELIC_LABELS=

#   Prometheus
#   Prometheus metrics server binding. Can't be the same as IMGPROXY_BIND. Default: blank
# IMGPROXY_PROMETHEUS_BIND=
#   Namespace (prefix) for imgproxy metrics. Default: blank
# IMGPROXY_PROMETHEUS_NAMESPACE=

#   Datadog
#   when true, enables sending metrics to Datadog. Default: false
# IMGPROXY_DATADOG_ENABLE=false
#   when true, enables sending the additional metrics to Datadog. Default: false
# IMGPROXY_DATADOG_ENABLE_ADDITIONAL_METRICS=false

#   OpenTelemetry
#   when true, enables sending request traces to OpenTelemetry collector. Default: false
# IMGPROXY_OPEN_TELEMETRY_ENABLE=false
#   when true, imgproxy will send metrics over OpenTelemetry Metrics API. Default: false
# IMGPROXY_OPEN_TELEMETRY_ENABLE_METRICS=false
#   OpenTelemetry collector TLS certificate, PEM-encoded (you can replace line breaks with \n). Default: blank
# IMGPROXY_OPEN_TELEMETRY_SERVER_CERT=
#   OpenTelemetry client TLS certificate, PEM-encoded (you can replace line breaks with \n). Default: blank
# IMGPROXY_OPEN_TELEMETRY_CLIENT_CERT=
#   OpenTelemetry client TLS key, PEM-encoded (you can replace line breaks with \n). Default: blank
# IMGPROXY_OPEN_TELEMETRY_CLIENT_KEY=
#   OpenTelemetry trace ID generator. Supported generators are xray and random. Default: xray
# IMGPROXY_OPEN_TELEMETRY_TRACE_ID_GENERATOR=xray

#   Amazon CloudWatch metrics
#   the value of the ServiceName dimension which will be used in the metrics. Default: blank
# [LAMBDA ENV] IMGPROXY_CLOUD_WATCH_SERVICE_NAME=
#   the CloudWatch namespace for the metrics
# [LAMBDA ENV] IMGPROXY_CLOUD_WATCH_NAMESPACE=""
#   the code of the AWS region to which the metrics should be sent
# [LAMBDA ENV] IMGPROXY_CLOUD_WATCH_REGION=""

#   Error reporting
#
#   when true, imgproxy will report downloading errors. Default: true
# IMGPROXY_REPORT_DOWNLOADING_ERRORS=true

#   Bugsnag
#   Bugsnag API key. When provided, enables error reporting to Bugsnag.
# IMGPROXY_BUGSNAG_KEY=
#   the Bugsnag stage to report to. Default: production
# IMGPROXY_BUGSNAG_STAGE=production
#   Honeybadger
#   the Honeybadger API key. When provided, enables error reporting to Honeybadger.
# IMGPROXY_HONEYBADGER_KEY=
#   the Honeybadger env to report to. Default: production
# IMGPROXY_HONEYBADGER_ENV=production
#   Sentry
#   Sentry project DSN. When provided, enables error reporting to Sentry.
# IMGPROXY_SENTRY_DSN=
#   the Sentry environment to report to. Default: production
# IMGPROXY_SENTRY_ENVIRONMENT=production
#   the Sentry release to report to. Default: imgproxy@{imgproxy version}
# IMGPROXY_SENTRY_RELEASE=imgproxy@{imgproxy version}
#   Airbrake
#   an Airbrake project id
# IMGPROXY_AIRBRAKE_PROJECT_ID=
#   an Airbrake project key
# IMGPROXY_AIRBRAKE_PROJECT_KEY=
#   the Airbrake environment to report to. Default: production
# IMGPROXY_AIRBRAKE_ENVIRONMENT=production

#   Log
#
#   the log format. The following formats are supported:
#   pretty: (default) colored human-readable format
#   structured: machine-readable format
#   json: JSON format
#   gcp: Google Cloud Logging agent compliant format
#   :
# [LAMBDA ENV] IMGPROXY_LOG_FORMAT=""
#   the log level. The following levels are supported error, warn, info and debug. Default: info
IMGPROXY_LOG_LEVEL=error
#   when true, enables sending logs to syslog.
# IMGPROXY_SYSLOG_ENABLE=false
#   the maximum log level to send to syslog. Known levels are: crit, error, warning and info. Default: info
# IMGPROXY_SYSLOG_LEVEL=info
#   the network that will be used to connect to syslog. When blank, the local syslog server will be used. Known networks are tcp, tcp4, tcp6, udp, udp4, udp6, ip, ip4, ip6, unix, unixgram and unixpacket. Default: blank
# IMGPROXY_SYSLOG_NETWORK=
#   the address of the syslog service. Not used if IMGPROXY_SYSLOG_NETWORK is blank. Default: blank
# IMGPROXY_SYSLOG_ADDRESS=
#   the specific syslog tag. Default: imgproxy
# IMGPROXY_SYSLOG_TAG=imgproxy

## Miscellaneous
#
#   a string that will be used as a processing/info options arguments' separator. Default: :
# IMGPROXY_ARGUMENTS_SEPARATOR=:
#   when true, imgproxy will process images in linear colorspace. This will slow down processing. Note that images won't be fully processed in linear colorspace while shrink-on-load is enabled (see below).
# IMGPROXY_USE_LINEAR_COLORSPACE=""
#   when true, disables shrink-on-load for JPEGs and WebP files. Allows processing the entire image in linear colorspace but dramatically slows down resizing and increases memory usage when working with large images.
# IMGPROXY_DISABLE_SHRINK_ON_LOAD=""
#   when true, imgproxy will strip all metadata (EXIF, IPTC, etc.) from JPEG and WebP output images. Default: true
# IMGPROXY_STRIP_METADATA=true
#   when true, imgproxy will not remove copyright info while stripping metadata. Default: true
# IMGPROXY_KEEP_COPYRIGHT=true
#   [PRO] the DPI metadata value that should be set for the image when its metadata is stripped. Default: 72.0
# IMGPROXY_STRIP_METADATA_DPI=72.0
#   when true, imgproxy will transform the embedded color profile (ICC) to sRGB and remove it from the image. Otherwise, imgproxy will try to keep it as is. Default: true
# IMGPROXY_STRIP_COLOR_PROFILE=true
#   when true, imgproxy will automatically rotate images based on the EXIF Orientation parameter (if available in the image meta data). The orientation tag will be removed from the image in all cases. Default: true
# IMGPROXY_AUTO_ROTATE=true
#   when true and the source image has an embedded thumbnail, imgproxy will always use the embedded thumbnail instead of the main image. Currently, only thumbnails embedded in heic and avif are supported. Default: false
# IMGPROXY_ENFORCE_THUMBNAIL=false
#   when true, response header Content-Disposition will include attachment. Default: false
# IMGPROXY_RETURN_ATTACHMENT=false
#   [PRO] the content of the health check response. Default: imgproxy is running
# IMGPROXY_HEALTH_CHECK_MESSAGE=
#   an additional path of the health check. Default: blank
# IMGPROXY_HEALTH_CHECK_PATH=
